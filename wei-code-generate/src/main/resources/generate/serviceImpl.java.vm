package ${serviceImplPackage};

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.toolkit.SqlHelper;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import ${mapperImport};
import ${entityImport};
import ${pageAOImport};
import ${saveAOImport};
import ${serviceImport};

import xyz.chaobei.common.WrapperBuilder;
import xyz.chaobei.common.exception.Asserts;
import java.util.List;
import java.util.Objects;

/**
 * ${config.desc} Service impl
 *
 * @author ${config.author}
 * @since ${Date}
 */
@Service
public class ${serviceImpl} implements ${service} {

    @Autowired
    private ${mapper} ${data.requestName}Mapper;

    @Override
    public List<${entity}> findAll() {
        return ${data.requestName}Mapper.selectList(null);
    }

    @Override
    public ${entity} findOne(${data.primaryType} id,boolean isExc) {

        ${entity} result = ${data.requestName}Mapper.selectById(id);

        if (Objects.isNull(result) && isExc) {
            Asserts.fail("未查询到相关信息");
        }
        return result;
    }

    @Override
    public Page<${entity}> findPage(${pageAO} pageAO) {

        Page page = new Page(pageAO.getCurrent(),pageAO.getSize());

        QueryWrapper wrapper = WrapperBuilder.simpleQuery(pageAO);

        ${data.requestName}Mapper.selectPage(page, wrapper);

        return page;
    }

    @Override
    public boolean save(${saveAO} params) {

        ${entity} model = new ${entity}();
        BeanUtils.copyProperties(params,model);
        /**
         * 你的逻辑写在这里
         */
        int num = ${data.requestName}Mapper.insert(model);

        return SqlHelper.retBool(num);
    }

    @Override
    public boolean updateById(${saveAO} params, ${data.primaryType} id) {

        ${entity} model = new ${entity}();
        BeanUtils.copyProperties(params,model);

        /**
         * 你的逻辑写在这里
         */
        model.set${data.primaryNameT}(id);
        int num = ${data.requestName}Mapper.updateById(model);

        return SqlHelper.retBool(num);
    }

    @Override
    public boolean deleteById(${data.primaryType} id) {

        /**
         * 你的逻辑写在这里
         */
        int num = ${data.requestName}Mapper.deleteById(id);
        return SqlHelper.retBool(num);
    }

}
