package ${controllerPackage};

import com.alibaba.fastjson.JSON;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import lombok.extern.slf4j.Slf4j;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import xyz.chaobei.common.api.CommonResult;
import ${entityImport};
import ${saveAOImport};
import ${pageAOImport};
import ${serviceImport};

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import java.util.List;
/**
 * ${config.desc}请求控制层
 *
 * @author ${config.author}
 * @since ${Date}
 */
@Api(tags = "${controller}",description = "${config.desc}")
@RestController
@RequestMapping("/${data.requestName}")
@Validated
@Slf4j
public class ${controller} {

    @Autowired
    private ${service} ${data.requestName}Service;


    /**
     * <p>查询所有${config.desc}
     * <p>author: ${config.author}
     *
     * @return CommonResult
     * @since ${Date}
     **/
    @ApiOperation("查询所有${config.desc}")
    @GetMapping("/")
    public CommonResult getList() {

        List<${entity}> allList = ${data.requestName}Service.findAll();
        log.info("${controller} getList[查询所有${config.desc}] 查询结果={}", JSON.toJSONString(allList));

        return CommonResult.success(allList);
    }

    /**
     * <p>查询单个${config.desc}
     * <p>author: ${config.author}
     *
     * @return CommonResult
     * @since ${Date}
     **/
    @ApiOperation("查询单个${config.desc}")
    @GetMapping("/{${data.primaryName}}")
    public CommonResult getOne(@PathVariable("${data.primaryName}") @ApiParam("查询的id") ${data.primaryType} id) {

        log.info("${controller} getOne[查询单个${config.desc}] 查询的id={}", id);
        ${entity} result = ${data.requestName}Service.findOne(id,true);
        log.info("${controller} getOne[查询单个${config.desc}] 查询结果={}", JSON.toJSONString(result));

        return CommonResult.success(result);
    }

    /**
     * <p>分页请求${config.desc}
     * <p>author: ${config.author}
     *
     * @param pageAO 分页查询参数
     * @since ${Date}
     * @return CommonResult
     **/
    @ApiOperation("分页请求${config.desc}")
    @PostMapping("/page")
    public CommonResult paging(@RequestBody @ApiParam("分页查询参数") ${pageAO} pageAO) {

        log.info("${controller} paging[分页请求${config.desc}] 分页查询参数={}", JSON.toJSONString(pageAO));
        Page<${entity}> allList = ${data.requestName}Service.findPage(pageAO);
        log.info("${controller} paging[分页请求${config.desc}] 查询结果={}", JSON.toJSONString(allList));

        return CommonResult.success(allList);
    }

    /**
     * <p>保存一个${config.desc}
     * <p>author: ${config.author}
     *
     * @param params 保存字段
     * @since ${Date}
     * @return CommonResult
     **/
    @ApiOperation("保存一个${config.desc}")
    @PostMapping("/")
    public CommonResult save(@RequestBody @Valid @ApiParam("保存字段") ${saveAO} params) {

        log.info("${controller} save[保存一个${config.desc}] 保存字段={}", JSON.toJSONString(params));
        boolean isSave = ${data.requestName}Service.save(params);
        log.info("${controller} save[保存一个${config.desc}] 操作结果={}", isSave);

        return CommonResult.result(isSave);
    }


    /**
     * <p>修改一个${config.desc}
     * <p>author: ${config.author}
     *
     * @param id 被修改的ID
     * @param params 被修改的字段
     * @since ${Date}
     * @return CommonResult
     **/
    @ApiOperation("修改一个${config.desc}")
    @PutMapping("/{${data.primaryName}}")
    public CommonResult update(@PathVariable("${data.primaryName}") @ApiParam("被修改的ID") ${data.primaryType} id, @Valid @RequestBody @ApiParam("被修改的字段") ${saveAO} params) {

        ${entity} result = ${data.requestName}Service.findOne(id,true);
        log.info("${controller} update[验证${config.desc}] 查询结果={}", JSON.toJSONString(result));

        log.info("${controller} update[修改一个${config.desc}] 被修改的ID={},被修改的字段={}", id, params);
        boolean isUpdate = ${data.requestName}Service.updateById(params,id);
        log.info("${controller} update[修改一个${config.desc}] 修改结果={}", isUpdate);

        return CommonResult.result(isUpdate);
    }

    /**
     * <p>删除一个${config.desc}
     * <p>author: ${config.author}
     *
     * @param id 被删除的ID
     * @since ${Date}
     * @return CommonResult
     **/
    @ApiOperation("删除一个${config.desc}")
    @DeleteMapping("/{${data.primaryName}}")
    public CommonResult delete(@Valid @NotNull @PathVariable("${data.primaryName}") @ApiParam("被删除的ID") ${data.primaryType} id) {

        ${entity} result = ${data.requestName}Service.findOne(id,true);
        log.info("${controller} delete[验证${config.desc}] 查询结果={}", JSON.toJSONString(result));

        log.info("${controller} delete[删除一个${config.desc}] 被删除的ID={}", id);
        boolean isDelete = ${data.requestName}Service.deleteById(id);
        log.info("${controller} delete[删除一个${config.desc}] 删除结果={}", isDelete);

        return CommonResult.result(isDelete);
    }

}
